{"ast":null,"code":"var _jsxFileName = \"K:\\\\SGP\\\\frontend\\\\src\\\\hooks\\\\useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const navigate = useNavigate();\n\n  // Check if user is authenticated on mount\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          const response = await api.get('/auth/me');\n          setUser(response.data.data.user);\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, [token]);\n\n  // Login function\n  const login = async (credentials, userType) => {\n    try {\n      setLoading(true);\n      const endpoint = userType === 'admin' ? '/auth/admin/login' : '/auth/student/verify-otp';\n      const response = await api.post(endpoint, credentials);\n      const {\n        token: newToken,\n        admin,\n        student\n      } = response.data.data;\n\n      // Store token\n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n\n      // Set user\n      const userData = admin || student;\n      setUser(userData);\n\n      // Set auth header\n      api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n      toast.success(response.data.message || 'Login successful!');\n\n      // Redirect based on user type\n      if (userType === 'admin') {\n        navigate('/admin');\n      } else {\n        navigate('/student');\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Student registration\n  const registerStudent = async formData => {\n    try {\n      setLoading(true);\n\n      // Debug logging\n      console.log('=== FRONTEND REGISTRATION DEBUG ===');\n      console.log('FormData being sent:');\n      for (let [key, value] of formData.entries()) {\n        console.log(key, value);\n      }\n      console.log('================================');\n      const response = await api.post('/auth/student/register', formData);\n      toast.success(response.data.message || 'Registration successful! Please verify your phone number.');\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response3, _error$response3$data;\n      console.error('Registration error details:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Registration failed';\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Resend OTP\n  const resendOTP = async (studentId, phoneNumber) => {\n    try {\n      const response = await api.post('/auth/student/resend-otp', {\n        studentId,\n        phoneNumber\n      });\n      toast.success(response.data.message || 'OTP resent successfully!');\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to resend OTP';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    delete api.defaults.headers.common['Authorization'];\n    navigate('/');\n    toast.success('Logged out successfully!');\n  };\n\n  // Update user profile\n  const updateProfile = async userData => {\n    try {\n      const endpoint = user.role === 'admin' ? '/admin/profile' : `/students/${user.id}`;\n      const response = await api.put(endpoint, userData);\n      setUser(response.data.data);\n      toast.success('Profile updated successfully!');\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const message = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to update profile';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Check if user is authenticated\n  const isAuthenticated = () => {\n    return !!token && !!user;\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return user && user.role === 'admin';\n  };\n\n  // Check if user is student\n  const isStudent = () => {\n    return user && !user.role;\n  };\n  const value = {\n    user,\n    loading,\n    token,\n    login,\n    registerStudent,\n    resendOTP,\n    logout,\n    updateProfile,\n    isAuthenticated,\n    isAdmin,\n    isStudent\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"focdkyF45NMHSQA3oXhTvwnMxDo=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","useEffect","createContext","useContext","useNavigate","toast","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","navigate","checkAuth","response","get","data","error","console","logout","login","credentials","userType","endpoint","post","newToken","admin","student","setItem","userData","defaults","headers","common","success","message","_error$response","_error$response$data","registerStudent","formData","log","key","value","entries","_error$response2","_error$response3","_error$response3$data","resendOTP","studentId","phoneNumber","_error$response4","_error$response4$data","removeItem","updateProfile","role","id","put","_error$response5","_error$response5$data","isAuthenticated","isAdmin","isStudent","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["K:/SGP/frontend/src/hooks/useAuth.js"],"sourcesContent":["import { useState, useEffect, createContext, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\nimport api from '../utils/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const navigate = useNavigate();\r\n\r\n  // Check if user is authenticated on mount\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (token) {\r\n        try {\r\n          const response = await api.get('/auth/me');\r\n          setUser(response.data.data.user);\r\n        } catch (error) {\r\n          console.error('Auth check failed:', error);\r\n          logout();\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, [token]);\r\n\r\n  // Login function\r\n  const login = async (credentials, userType) => {\r\n    try {\r\n      setLoading(true);\r\n      const endpoint = userType === 'admin' ? '/auth/admin/login' : '/auth/student/verify-otp';\r\n      const response = await api.post(endpoint, credentials);\r\n      \r\n      const { token: newToken, admin, student } = response.data.data;\r\n      \r\n      // Store token\r\n      localStorage.setItem('token', newToken);\r\n      setToken(newToken);\r\n      \r\n      // Set user\r\n      const userData = admin || student;\r\n      setUser(userData);\r\n      \r\n      // Set auth header\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\r\n      \r\n      toast.success(response.data.message || 'Login successful!');\r\n      \r\n      // Redirect based on user type\r\n      if (userType === 'admin') {\r\n        navigate('/admin');\r\n      } else {\r\n        navigate('/student');\r\n      }\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      toast.error(message);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Student registration\r\n  const registerStudent = async (formData) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Debug logging\r\n      console.log('=== FRONTEND REGISTRATION DEBUG ===');\r\n      console.log('FormData being sent:');\r\n      for (let [key, value] of formData.entries()) {\r\n        console.log(key, value);\r\n      }\r\n      console.log('================================');\r\n      \r\n      const response = await api.post('/auth/student/register', formData);\r\n      toast.success(response.data.message || 'Registration successful! Please verify your phone number.');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Registration error details:', error.response?.data);\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      toast.error(message);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Resend OTP\r\n  const resendOTP = async (studentId, phoneNumber) => {\r\n    try {\r\n      const response = await api.post('/auth/student/resend-otp', {\r\n        studentId,\r\n        phoneNumber\r\n      });\r\n      toast.success(response.data.message || 'OTP resent successfully!');\r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to resend OTP';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n    delete api.defaults.headers.common['Authorization'];\r\n    navigate('/');\r\n    toast.success('Logged out successfully!');\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      const endpoint = user.role === 'admin' ? '/admin/profile' : `/students/${user.id}`;\r\n      const response = await api.put(endpoint, userData);\r\n      setUser(response.data.data);\r\n      toast.success('Profile updated successfully!');\r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to update profile';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Check if user is authenticated\r\n  const isAuthenticated = () => {\r\n    return !!token && !!user;\r\n  };\r\n\r\n  // Check if user is admin\r\n  const isAdmin = () => {\r\n    return user && user.role === 'admin';\r\n  };\r\n\r\n  // Check if user is student\r\n  const isStudent = () => {\r\n    return user && !user.role;\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    token,\r\n    login,\r\n    registerStudent,\r\n    resendOTP,\r\n    logout,\r\n    updateProfile,\r\n    isAuthenticated,\r\n    isAdmin,\r\n    isStudent\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}