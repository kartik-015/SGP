{"ast":null,"code":"import axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  // Add auth token if available\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  const {\n    response\n  } = error;\n\n  // Handle different error status codes\n  if (response) {\n    switch (response.status) {\n      case 401:\n        // Unauthorized - clear token and redirect to login\n        localStorage.removeItem('token');\n        window.location.href = '/login/student';\n        toast.error('Session expired. Please login again.');\n        break;\n      case 403:\n        // Forbidden\n        toast.error('Access denied. You do not have permission to perform this action.');\n        break;\n      case 404:\n        // Not found\n        toast.error('Resource not found.');\n        break;\n      case 422:\n        // Validation error\n        const validationErrors = response.data.errors;\n        if (validationErrors && Array.isArray(validationErrors)) {\n          validationErrors.forEach(error => {\n            toast.error(error.msg || error.message);\n          });\n        } else {\n          toast.error(response.data.message || 'Validation failed.');\n        }\n        break;\n      case 429:\n        // Too many requests\n        toast.error('Too many requests. Please try again later.');\n        break;\n      case 500:\n        // Server error\n        toast.error('Server error. Please try again later.');\n        break;\n      default:\n        // Other errors\n        toast.error(response.data.message || 'An error occurred.');\n    }\n  } else {\n    // Network error\n    toast.error('Network error. Please check your connection.');\n  }\n  return Promise.reject(error);\n});\n\n// API helper functions\nexport const apiHelpers = {\n  // Equipment\n  getEquipment: (params = {}) => api.get('/equipment', {\n    params\n  }),\n  getEquipmentById: id => api.get(`/equipment/${id}`),\n  getEquipmentCategories: () => api.get('/equipment/categories'),\n  // Requests\n  createRequest: data => api.post('/requests', data),\n  getRequests: (params = {}) => api.get('/requests', {\n    params\n  }),\n  getRequestById: id => api.get(`/requests/${id}`),\n  approveRequest: id => api.put(`/requests/${id}/approve`),\n  rejectRequest: (id, reason) => api.put(`/requests/${id}/reject`, {\n    reason\n  }),\n  markAsBorrowed: id => api.put(`/requests/${id}/borrow`),\n  markAsReturned: (id, isDamaged = false) => api.put(`/requests/${id}/return`, {\n    isDamaged\n  }),\n  // Students\n  getStudents: (params = {}) => api.get('/students', {\n    params\n  }),\n  getStudentById: id => api.get(`/students/${id}`),\n  updateStudent: (id, data) => api.put(`/students/${id}`, data),\n  getStudentRequests: (id, params = {}) => api.get(`/students/${id}/requests`, {\n    params\n  }),\n  getStudentStats: id => api.get(`/students/${id}/stats`),\n  verifyStudent: id => api.put(`/students/${id}/verify`),\n  deactivateStudent: id => api.put(`/students/${id}/deactivate`),\n  getDepartments: () => api.get('/students/departments'),\n  // Notifications\n  getNotifications: (params = {}) => api.get('/notifications', {\n    params\n  }),\n  markNotificationAsRead: id => api.put(`/notifications/${id}/read`),\n  markAllNotificationsAsRead: () => api.put('/notifications/read-all'),\n  createNotification: data => api.post('/notifications', data),\n  deleteNotification: id => api.delete(`/notifications/${id}`),\n  getNotificationStats: () => api.get('/notifications/stats'),\n  // Admin specific\n  getEquipmentStats: () => api.get('/equipment/stats/overview'),\n  getRequestStats: () => api.get('/requests/stats/overview'),\n  // File upload\n  uploadFile: (file, type = 'general') => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post(`/upload/${type}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  // QR Code scanning\n  scanQRCode: data => api.post('/scan/qr', data),\n  // Health check\n  healthCheck: () => api.get('/health')\n};\nexport default api;","map":{"version":3,"names":["axios","toast","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","removeItem","window","location","href","validationErrors","data","errors","Array","isArray","forEach","msg","message","apiHelpers","getEquipment","params","get","getEquipmentById","id","getEquipmentCategories","createRequest","post","getRequests","getRequestById","approveRequest","put","rejectRequest","reason","markAsBorrowed","markAsReturned","isDamaged","getStudents","getStudentById","updateStudent","getStudentRequests","getStudentStats","verifyStudent","deactivateStudent","getDepartments","getNotifications","markNotificationAsRead","markAllNotificationsAsRead","createNotification","deleteNotification","delete","getNotificationStats","getEquipmentStats","getRequestStats","uploadFile","file","type","formData","FormData","append","scanQRCode","healthCheck"],"sources":["K:/SGP/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Add auth token if available\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    const { response } = error;\r\n    \r\n    // Handle different error status codes\r\n    if (response) {\r\n      switch (response.status) {\r\n        case 401:\r\n          // Unauthorized - clear token and redirect to login\r\n          localStorage.removeItem('token');\r\n          window.location.href = '/login/student';\r\n          toast.error('Session expired. Please login again.');\r\n          break;\r\n          \r\n        case 403:\r\n          // Forbidden\r\n          toast.error('Access denied. You do not have permission to perform this action.');\r\n          break;\r\n          \r\n        case 404:\r\n          // Not found\r\n          toast.error('Resource not found.');\r\n          break;\r\n          \r\n        case 422:\r\n          // Validation error\r\n          const validationErrors = response.data.errors;\r\n          if (validationErrors && Array.isArray(validationErrors)) {\r\n            validationErrors.forEach(error => {\r\n              toast.error(error.msg || error.message);\r\n            });\r\n          } else {\r\n            toast.error(response.data.message || 'Validation failed.');\r\n          }\r\n          break;\r\n          \r\n        case 429:\r\n          // Too many requests\r\n          toast.error('Too many requests. Please try again later.');\r\n          break;\r\n          \r\n        case 500:\r\n          // Server error\r\n          toast.error('Server error. Please try again later.');\r\n          break;\r\n          \r\n        default:\r\n          // Other errors\r\n          toast.error(response.data.message || 'An error occurred.');\r\n      }\r\n    } else {\r\n      // Network error\r\n      toast.error('Network error. Please check your connection.');\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API helper functions\r\nexport const apiHelpers = {\r\n  // Equipment\r\n  getEquipment: (params = {}) => api.get('/equipment', { params }),\r\n  getEquipmentById: (id) => api.get(`/equipment/${id}`),\r\n  getEquipmentCategories: () => api.get('/equipment/categories'),\r\n  \r\n  // Requests\r\n  createRequest: (data) => api.post('/requests', data),\r\n  getRequests: (params = {}) => api.get('/requests', { params }),\r\n  getRequestById: (id) => api.get(`/requests/${id}`),\r\n  approveRequest: (id) => api.put(`/requests/${id}/approve`),\r\n  rejectRequest: (id, reason) => api.put(`/requests/${id}/reject`, { reason }),\r\n  markAsBorrowed: (id) => api.put(`/requests/${id}/borrow`),\r\n  markAsReturned: (id, isDamaged = false) => api.put(`/requests/${id}/return`, { isDamaged }),\r\n  \r\n  // Students\r\n  getStudents: (params = {}) => api.get('/students', { params }),\r\n  getStudentById: (id) => api.get(`/students/${id}`),\r\n  updateStudent: (id, data) => api.put(`/students/${id}`, data),\r\n  getStudentRequests: (id, params = {}) => api.get(`/students/${id}/requests`, { params }),\r\n  getStudentStats: (id) => api.get(`/students/${id}/stats`),\r\n  verifyStudent: (id) => api.put(`/students/${id}/verify`),\r\n  deactivateStudent: (id) => api.put(`/students/${id}/deactivate`),\r\n  getDepartments: () => api.get('/students/departments'),\r\n  \r\n  // Notifications\r\n  getNotifications: (params = {}) => api.get('/notifications', { params }),\r\n  markNotificationAsRead: (id) => api.put(`/notifications/${id}/read`),\r\n  markAllNotificationsAsRead: () => api.put('/notifications/read-all'),\r\n  createNotification: (data) => api.post('/notifications', data),\r\n  deleteNotification: (id) => api.delete(`/notifications/${id}`),\r\n  getNotificationStats: () => api.get('/notifications/stats'),\r\n  \r\n  // Admin specific\r\n  getEquipmentStats: () => api.get('/equipment/stats/overview'),\r\n  getRequestStats: () => api.get('/requests/stats/overview'),\r\n  \r\n  // File upload\r\n  uploadFile: (file, type = 'general') => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    return api.post(`/upload/${type}`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n  \r\n  // QR Code scanning\r\n  scanQRCode: (data) => api.post('/scan/qr', data),\r\n  \r\n  // Health check\r\n  healthCheck: () => api.get('/health'),\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}